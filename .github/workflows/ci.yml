name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Run tests
      run: npm test
    
    - name: Build project
      run: npm run build
    
    - name: Check documentation consistency
      run: npm run test:docs

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Run ESLint security checks
      run: npm run lint

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check for unused dependencies
      run: |
        npm install -g depcheck
        depcheck --ignore-bin-package || echo "Depcheck completed with warnings"
    
    - name: Check bundle size
      run: |
        npm run build
        echo "Build size:"
        du -sh dist/

  integration:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install tmux
      run: |
        sudo apt-get update
        sudo apt-get install -y tmux
        tmux -V
    
    - name: Build project
      run: npm run build
    
    - name: Test CLI help
      run: |
        node dist/cli.js --help
        node dist/cli.js --version
    
    - name: Test project discovery
      run: |
        mkdir -p test-projects/node-app test-projects/python-app
        echo '{"name": "test"}' > test-projects/node-app/package.json
        echo 'pandas' > test-projects/python-app/requirements.txt
        node dist/cli.js test-projects --dry-run || true